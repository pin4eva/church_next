"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.userTypes = void 0;
var apollo_server_express_1 = require("apollo-server-express");
exports.userTypes = apollo_server_express_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  type User {\n    _id: ID\n    name: String\n    email: String\n    position: String\n    phone: String\n    address: String\n    token: String\n    role: String\n    isActive: Boolean\n    image: String\n    fellowship: String\n    department: String\n    branch: String\n    firstName: String\n    lastName: String\n  }\n\n  type Token {\n    token: String\n    user: User\n  }\n\n  extend type Query {\n    # Users Query\n    getUsers: [User]\n    me(token: String): User\n    auth: User\n    getUser(_id: ID): User\n  }\n\n  extend type Mutation {\n    # User Mutations\n    signup(input: SignupInput): User\n    login(email: String, password: String): Token\n    updateUser(input: UserInput): User\n    deleteUser(_id: ID): User\n    verify(token: String): User\n    forgotPassword(token: String, password: String): User\n    changePassword(_id: ID, password: String): User\n    checkEmail(email: String): User\n    changeRole(_id: ID!, role: String!): User\n\n    setTarget(target: Int, _id: ID): User\n  }\n\n  extend type Subscription {\n    loggedIn: User\n  }\n\n  input UserInput {\n    _id: ID\n    name: String\n    email: String\n    position: String\n    phone: String\n    address: String\n    token: String\n    role: String\n    isActive: Boolean\n    image: String\n    fellowship: String\n    department: String\n    branch: String\n    firstName: String\n    lastName: String\n  }\n\n  input SignupInput {\n    _id: ID\n    name: String\n    email: String\n    position: String\n    phone: String\n    address: String\n    token: String\n    role: String\n    isActive: Boolean\n    image: String\n    fellowship: String\n    department: String\n    branch: String\n    password: String\n    firstName: String\n    lastName: String\n  }\n"], ["\n  type User {\n    _id: ID\n    name: String\n    email: String\n    position: String\n    phone: String\n    address: String\n    token: String\n    role: String\n    isActive: Boolean\n    image: String\n    fellowship: String\n    department: String\n    branch: String\n    firstName: String\n    lastName: String\n  }\n\n  type Token {\n    token: String\n    user: User\n  }\n\n  extend type Query {\n    # Users Query\n    getUsers: [User]\n    me(token: String): User\n    auth: User\n    getUser(_id: ID): User\n  }\n\n  extend type Mutation {\n    # User Mutations\n    signup(input: SignupInput): User\n    login(email: String, password: String): Token\n    updateUser(input: UserInput): User\n    deleteUser(_id: ID): User\n    verify(token: String): User\n    forgotPassword(token: String, password: String): User\n    changePassword(_id: ID, password: String): User\n    checkEmail(email: String): User\n    changeRole(_id: ID!, role: String!): User\n\n    setTarget(target: Int, _id: ID): User\n  }\n\n  extend type Subscription {\n    loggedIn: User\n  }\n\n  input UserInput {\n    _id: ID\n    name: String\n    email: String\n    position: String\n    phone: String\n    address: String\n    token: String\n    role: String\n    isActive: Boolean\n    image: String\n    fellowship: String\n    department: String\n    branch: String\n    firstName: String\n    lastName: String\n  }\n\n  input SignupInput {\n    _id: ID\n    name: String\n    email: String\n    position: String\n    phone: String\n    address: String\n    token: String\n    role: String\n    isActive: Boolean\n    image: String\n    fellowship: String\n    department: String\n    branch: String\n    password: String\n    firstName: String\n    lastName: String\n  }\n"])));
var templateObject_1;
